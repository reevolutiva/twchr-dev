<?php
/**
 * Generated by the WordPress Meta Box Generator
 * https://jeremyhixon.com/tool/wordpress-meta-box-generator/
 * 
 * Retrieving the values:
 * start date = get_post_meta( get_the_ID(), 'to_api_start-date', true )
 * start time = get_post_meta( get_the_ID(), 'to_api_start-time', true )
 * is_serie = get_post_meta( get_the_ID(), 'to_api_is_serie', true )
 * duration = get_post_meta( get_the_ID(), 'to_api_duration', true )
 * category = get_post_meta( get_the_ID(), 'to_api_category', true )
 */



 
function to_api_meta_box_content($post){
	$values    = get_post_custom( $post->ID );
	//show_dump($values);
	$dateTime = isset($values['twchr_toApi_dateTime'][0]) ? $values['twchr_toApi_dateTime'][0] : '';
	$duration = isset($values['twchr_toApi_duration'][0]) ? $values['twchr_toApi_duration'][0] : '';
	$select = isset($values['twchr_toApi_category']) ? $values['twchr_toApi_category'][0] : ''; 
	?>
    <metabox>
		<label >Fecha y hora<input type="datetime-local" name='twchr_toApi_dateTime' value="<?php echo  $dateTime;  ?>"></label>
		<label >Duration (minutos)<input type="number" name="twchr_toApi_duration" value="<?php echo  $duration?>"></label>
		<label>Categoria
			<select name="twchr_toApi_category">  
				<option value="509658" <?php selected( $select, 509658 ); ?>>Just Chating</option> 
			</select>
		</label>
	</metabox>
	<?php
}

function to_api_metabox(){
	//add_meta_box($id:string,$title:string,$callback:callable,$screen:string|array|WP_Screen|null,$context:string,$priority:string,$callback_args:array|null )
	add_meta_box( 'to-api', 'To API', 'to_api_meta_box_content', 'twchr_streams', 'normal', 'high' );
}

add_action('add_meta_boxes','to_api_metabox');


function to_api_metabox_save($post_id){
/* 
Antes de guardar la información, necesito verificar tres cosas:
	1. Si la entrada se está autoguardando
	2. Comprobar que el usuario actual puede realmente modificar este contenido.
*/

	// Ignoramos los auto guardados.
    if ( defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE ) {
        return;
    }

	if ( ! current_user_can( 'edit_post' ) ) {
        return;
    }
	

	 $allowed = array();
	 if ( isset( $_POST['twchr_toApi_dateTime'] ) ) {
        update_post_meta( $post_id, 'twchr_toApi_dateTime', wp_kses( $_POST['twchr_toApi_dateTime'], $allowed ) );
    }

	 if ( isset( $_POST['twchr_toApi_duration'] ) ) {
        update_post_meta( $post_id, 'twchr_toApi_duration', wp_kses( $_POST['twchr_toApi_duration'], $allowed ) );
    }

	 if ( isset( $_POST['twchr_toApi_category'] ) ) {
        update_post_meta( $post_id, 'twchr_toApi_category', wp_kses( $_POST['twchr_toApi_category'], $allowed ) );
    }
	  
}


add_action( 'save_post', 'to_api_metabox_save' );