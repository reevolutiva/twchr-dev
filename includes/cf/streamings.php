<?php
/**
 * Generated by the WordPress Meta Box Generator
 * https://jeremyhixon.com/tool/wordpress-meta-box-generator/
 * 
 * Retrieving the values:
 * create_at = get_post_meta( get_the_ID(), 'twchr-from-api_create_at', true )
 * description = get_post_meta( get_the_ID(), 'twchr-from-api_description', true )
 * duration = get_post_meta( get_the_ID(), 'twchr-from-api_duration', true )
 * id = get_post_meta( get_the_ID(), 'twchr-from-api_id', true )
 * languaje = get_post_meta( get_the_ID(), 'twchr-from-api_languaje', true )
 * muted_segment = get_post_meta( get_the_ID(), 'twchr-from-api_muted_segment', true )
 * published_at = get_post_meta( get_the_ID(), 'twchr-from-api_published_at', true )
 * stream_id = get_post_meta( get_the_ID(), 'twchr-from-api_stream_id', true )
 * thumbnail_url = get_post_meta( get_the_ID(), 'twchr-from-api_thumbnail_url', true )
 * type = get_post_meta( get_the_ID(), 'twchr-from-api_type', true )
 * url = get_post_meta( get_the_ID(), 'twchr-from-api_url', true )
 * user_id = get_post_meta( get_the_ID(), 'twchr-from-api_user_id', true )
 * user_login = get_post_meta( get_the_ID(), 'twchr-from-api_user_login', true )
 * user_name = get_post_meta( get_the_ID(), 'twchr-from-api_user_name', true )
 * view_count = get_post_meta( get_the_ID(), 'twchr-from-api_view_count', true )
 * viewble = get_post_meta( get_the_ID(), 'twchr-from-api_viewble', true )
 * title = get_post_meta( get_the_ID(), 'twchr-from-api_title', true )
 */


 
function twitcher_stream_meta_box_content($post){
	$values = get_post_custom( $post->ID );


	$create_at = isset($values['twchr-from-api_create_at'][0]) ? $values['twchr-from-api_create_at'] : false;
    $description =  isset($values['twchr-from-api_description'][0]) ? $values['twchr-from-api_description'][0] : false;
    $duration = isset($values['twchr-from-api_duration'][0]) ? $values['twchr-from-api_duration'][0] : false;
    $id = isset($values['twchr-from-api_id'][0]) ? $values['twchr-from-api_id'][0] : false;
    $languaje = isset($values['twchr-from-api_languaje'][0]) ? $values['twchr-from-api_languaje'][0] : false;
    $muted_segment = isset($values['twchr-from-api_muted_segment'][0]) ? $values['twchr-from-api_muted_segment'][0] : false;
    $published_at = isset($values['twchr-from-api_published_at'][0]) ? $values['twchr-from-api_published_at'][0] : false;
    $stream_id = isset($values['twchr-from-api_stream_id'][0]) ? $values['twchr-from-api_stream_id'][0] : false;
    $thumbnail_url = isset($values['twchr-from-api_thumbnail_url'][0]) ? $values['twchr-from-api_thumbnail_url'][0] : false;
    $type = isset($values['twchr-from-api_type'][0]) ? $values['twchr-from-api_type'][0] : false;
    $url = isset($values['twchr-from-api_url'][0]) ? $values['twchr-from-api_url'][0] : false;
    $user_id = isset($values['twchr-from-api_user_id'][0]) ? $values['twchr-from-api_user_id'][0] : false;
    $user_login = isset($values['twchr-from-api_user_login'][0]) ? $values['twchr-from-api_user_login'][0] : false;
    $user_name = isset($values['twchr-from-api_user_name'][0]) ? $values['twchr-from-api_user_name'][0] : false;
    $view_count = isset($values['twchr-from-api_view_count'][0]) ? $values['twchr-from-api_view_count'][0] : false;
    $viewble = isset($values['twchr-from-api_viewble'][0]) ? $values['twchr-from-api_viewble'][0] : false;
    $title = isset($values['twchr-from-api_title'][0]) ? $values['twchr-from-api_title'][0] : false;
	?>
	<style>
            a.twchr_button_get_videos {
                text-decoration: none;
                padding: 5px 10px;
                display: block;
                margin-bottom: 10pt;
                width: max-content;
                border-radius: 5px;
                background-color: var(--twchr-purple);
                color: #fff;
            }

            stream.twchr_modal_get_videos{
                display: none;
            }

            stream.twchr_modal_get_videos.active {
                max-width:100%;
                position: static;
    			margin-bottom: 1cm;
                box-shadow: 0 0 3px rgba(0, 0, 0, .5);
                display: block;
            }

            .twchr-modal .twchr_help_button {
                display: block;
                width: 40px;
                height: 40px;
                background-image: url(<?= plugins_url('twitcher/includes/assets/help.png')?>);
                background-size: contain;
                background-repeat: no-repeat;
                margin-right: 6pt;
            }

			#twitcher_stream metabox{
				display: grid;
				grid-template-columns:1fr 1fr 1fr;
				row-gap:15px;
			}

			#twitcher_stream metabox label{
				display: grid;
				grid-template-columns:30% 60%;
			}

			#twitcher_stream metabox input{
				border:1px solid var(--twchr-purple);
				box-shadow:5px 6px 5px #00000012 inset;
			}

        </style>
        <a id="twchr-gutemberg-modal-button" class="twchr_button_get_videos"
            href="#"><?php _e('Asign Twitch Streaming','twitcher')?>
		</a>
		<stream class="twchr_modal_get_videos twchr-modal">
            <div class="twchr-modal-selection_close">
                x
            </div>
            <div class="twchr-modal-selection__info">
                <h3><?php _e('Asign video to post','twitcher') ?></h3>

                <picture>
                    <img src="<?= plugins_url('/twitcher/includes/assets/Isologo_twitcher.svg')?>" alt="logo-twitcher">
                </picture>
            </div>

            <div id="twchr_button_get_videos__content">
                <ul class="twchr-modal-selection__list">
                    <li><?= __('Streaming name','twitcher'); ?></li>
                    <li><?= __('Date','twitcher'); ?></li>
                    <li><?= __('Already saved?','twitcher'); ?></li>
                    <li><?= __('Import','twitcher'); ?></li>
                </ul>
                <div class="content">

                </div>
            </div>

            <div class="twchr-modal-footer">
                <span class="twchr_help_button">
                    <p><?php _e('The folowing list is the avaiable videos in your twitch account. Select the video that you want to asign to this post.','twitcher'); ?>
                    </p>
                    
                </span>
                <button id="twchr-modal-selection__btn"><?= __('Asign','twitcher');?></button>
            </div>
        </stream>
  
    <metabox <?=  $_GET['twchr_card'] == 'off' ? 'style="display:none;"' : ''?>>
		<label>create_at<input name='twchr-from-api_create_at' type="text" value='<?= $create_at != false ? $create_at : ''?>'></label>
		<label>description<input name='twchr-from-api_description' type="text" value='<?= $description != false ? $description : ''?>'></label>
		<label>duration<input name='twchr-from-api_duration' type="text" value='<?= $duration != false ? $duration : ''?>'></label>
		<label>id<input name='twchr-from-api_id' type="text" value='<?= $id != false ? $id : ''?>'></label>
		<label>languaje<input name='twchr-from-api_languaje' type="text" value='<?= $languaje != false ? $languaje : ''?>'></label>
		<label>muted_segment<input name='twchr-from-api_muted_segment' type="text" value='<?= $muted_segment != false ? $muted_segment : ''?>'></label>
		<label>published_at<input name='twchr-from-api_published_at' type="text" value='<?= $published_at != false ? $published_at : ''?>'></label>
		<label>stream_id<input name='twchr-from-api_stream_id' type="text" value='<?= $stream_id != false ? $stream_id : ''?>'></label>
		<label>thumbnail_url<input name='twchr-from-api_thumbnail_url' type="text" value='<?= $thumbnail_url != false ? $thumbnail_url : ''?>'></label>
		<label>type<input name='twchr-from-api_type' type="text" value='<?= $type != false ? $type : ''?>'></label>
		<label>url<input name='twchr-from-api_url' type="text" value='<?= $url != false ? $url : ''?>'></label>
		<label>user_id<input name='twchr-from-api_user_id' type="text" value='<?= $user_id != false ? $user_id : ''?>'></label>
		<label>user_login<input name='twchr-from-api_user_login' type="text" value='<?= $user_login != false ? $user_login : ''?>'></label>
		<label>user_name<input name='twchr-from-api_user_name' type="text" value='<?= $user_name != false ? $user_name : ''?>'></label>
		<label>view_count<input name='twchr-from-api_view_count' type="text" value='<?= $view_count != false ? $view_count : ''?>'></label>
		<label>viewble<input name='twchr-from-api_viewble' type="text" value='<?= $viewble != false ? $viewble : ''?>'></label>
		<label>title<input name='twchr-from-api_title' type="text" value='<?= $title != false ? $title : ''?>'></label>
	</metabox>
    <?php 
            require_once 'streaming_custom_card.php';
    ?>
    <script>
        async function twchrFetchGet (url, callback, mode, requestOptions=false){
            let get;
            if(requestOptions != false){
                get = await fetch(url,requestOptions);
            }else{
                get = await fetch(url);
            }
            
            let response;
            switch (mode) {
            case "json":
                response = await get.json();
                break;
            case "blob":
                response = await get.blob();
                break;
            default:
                response = await get.text();
                break;
            }
            callback(response);
        }
		const twchr_gutember_modal_button = document.querySelector("#twchr-gutemberg-modal-button");
        const twchr_modal = document.querySelector(".twchr_modal_get_videos");
        const twchr_modal_button_close = document.querySelector(".twchr_modal_get_videos.twchr-modal .twchr-modal-selection_close");
        
        
		twchr_gutember_modal_button.addEventListener('click',(e)=>{
        
            document.querySelector(".twchr_custom_card--contain").style = "display:none;";
            
		});
        
        

        twchr_modal_button_close.addEventListener('click', e => {
            twchr_modal.classList.remove('active');
        });
        const postBox = [...document.querySelectorAll("#twitcher_stream metabox input") ];
        
        document.querySelector(".twchr_custom_card--contain .twchr_card_header--title h3").textContent = postBox[16].value === '' ? 'undefined' : postBox[16].value;
        document.querySelector(".twchr_custom_card--contain .twchr_card_header-description h4").textContent = postBox[1].value === '' ? 'undefined' : postBox[1].value;
        
        document.querySelector(".twchr_custom_card--contain .twchr_card_body--list li:nth-of-type(1) span.value").textContent = postBox[0].value === '' ? 'undefined' : postBox[0].value;
        document.querySelector(".twchr_custom_card--contain .twchr_card_body--list li:nth-of-type(2) span.value").textContent = postBox[2].value === '' ? 'undefined' : postBox[2].value;
        document.querySelector(".twchr_custom_card--contain .twchr_card_body--list li:nth-of-type(3) span.value").textContent = postBox[4].value === '' ? 'undefined' : postBox[4].value;
        document.querySelector(".twchr_custom_card--contain .twchr_card_body--list li:nth-of-type(4) span.value").textContent = postBox[9].value === '' ? 'undefined' : postBox[9].value;
        document.querySelector(".twchr_custom_card--contain .twchr_card_body--list li:nth-of-type(5) span.value").textContent = postBox[15].value === '' ? 'undefined' : postBox[15].value;
        document.querySelector(".twchr_custom_card--contain .twchr_card_body--list li:nth-of-type(6) span.value").textContent = postBox[10].value === '' ? 'undefined' : postBox[10].value;
        let card_img = postBox[8].value;
        card_img = card_img.replace("%{width}x%{height}","250x150");
        document.querySelector(".twchr_custom_card--contain .twchr_card_header--img img").setAttribute('src',card_img);
    
        document.querySelector(".twchr_custom_card--contain .twchr_card_body--status .item h3").textContent = postBox[14].value === '' ? 'undefined' : postBox[14].value;
        <?php
            $twch_data_prime = json_decode(get_option('twchr_keys'));
            $client_id = $twch_data_prime->{'client-id'};
            $twchr_app_token = get_option('twchr_app_token');
        ?>
        twchrFetchGet(
            'https://api.twitch.tv/helix/videos?id='+postBox[3].value,
            (element)=>{
                //console.log(element.data);
                if(element.data){
                    document.querySelector(".twchr_custom_card--contain .twchr_card_body--status .item.status h3").classList.add('on');
                    document.querySelector(".twchr_custom_card--contain .twchr_card_body--status .item.status h3").textContent = 'Online';
                }else{
                    document.querySelector(".twchr_custom_card--contain .twchr_card_body--status .item.status h3").classList.add('failed');
                    document.querySelector(".twchr_custom_card--contain .twchr_card_body--status .item.status h3").textContent = 'Offline';    
                }
            },
            'json',{headers: {
                "Authorization": `Bearer <?= $twchr_app_token?>`,
                "client-id": '<?= $client_id?>'
        }});

        const twchr_streamings_inputs_array = [];
        postBox.forEach(element =>{
            twchr_streamings_inputs_array.push(element.value);
        });
        // Si todos los inputs esta vacios
        if(twchr_streamings_inputs_array.every(e => e === '')){
            document.querySelector(".twchr_custom_card--contain").classList.add("closed");
            document.querySelector("#twitcher_stream .inside").classList.remove("active");
        }else{
            document.querySelector(".twchr_custom_card--contain").classList.remove("closed");
            document.querySelector("#twitcher_stream .inside").classList.add("active");
        }
        </script>
	
        
	<?php
}

function twitcher_stream_metabox(){
	//add_meta_box($id:string,$title:string,$callback:callable,$screen:string|array|WP_Screen|null,$context:string,$priority:string,$callback_args:array|null )
	add_meta_box( 'twitcher_stream', 'Twitcher streamings', 'twitcher_stream_meta_box_content', 'twchr_streams', 'normal', 'high' );
}

add_action('add_meta_boxes','twitcher_stream_metabox');


function twitcher_stream_metabox_save($post_id){
/* 
Antes de guardar la información, necesito verificar tres cosas:
	1. Si la entrada se está autoguardando
	2. Comprobar que el usuario actual puede realmente modificar este contenido.
 */
	
	if (! current_user_can( 'edit_posts' )) {
        return;
    }		
	

		$allowed = array();
		if ( isset( $_POST['twchr-from-api_create_at'] ) ) {
			update_post_meta( $post_id, 'twchr-from-api_create_at', wp_kses( $_POST['twchr-from-api_create_at'], $allowed ) );
		}
		if ( isset( $_POST['twchr-from-api_description'] ) ) {
			update_post_meta( $post_id, 'twchr-from-api_description', wp_kses( $_POST['twchr-from-api_description'], $allowed ) );
		}
		if ( isset( $_POST['twchr-from-api_duration'] ) ) {
			update_post_meta( $post_id, 'twchr-from-api_duration', wp_kses( $_POST['twchr-from-api_duration'], $allowed ) );
		}
		if ( isset( $_POST['twchr-from-api_id'] ) ) {
			update_post_meta( $post_id, 'twchr-from-api_id', wp_kses( $_POST['twchr-from-api_id'], $allowed ) );
		}
		if ( isset( $_POST['twchr-from-api_languaje'] ) ) {
			update_post_meta( $post_id, 'twchr-from-api_languaje', wp_kses( $_POST['twchr-from-api_languaje'], $allowed ) );
		}
		if ( isset( $_POST['twchr-from-api_muted_segment'] ) ) {
			update_post_meta( $post_id, 'twchr-from-api_muted_segment', wp_kses( $_POST['twchr-from-api_muted_segment'], $allowed ) );
		}
		if ( isset( $_POST['twchr-from-api_published_at'] ) ) {
			update_post_meta( $post_id, 'twchr-from-api_published_at', wp_kses( $_POST['twchr-from-api_published_at'], $allowed ) );
		}
		if ( isset( $_POST['twchr-from-api_stream_id'] ) ) {
			update_post_meta( $post_id, 'twchr-from-api_stream_id', wp_kses( $_POST['twchr-from-api_stream_id'], $allowed ) );
		}
		if ( isset( $_POST['twchr-from-api_thumbnail_url'] ) ) {
			update_post_meta( $post_id, 'twchr-from-api_thumbnail_url', wp_kses( $_POST['twchr-from-api_thumbnail_url'], $allowed ) );
		}
		if ( isset( $_POST['twchr-from-api_type'] ) ) {
			update_post_meta( $post_id, 'twchr-from-api_type', wp_kses( $_POST['twchr-from-api_type'], $allowed ) );
		}
		if ( isset( $_POST['twchr-from-api_url'] ) ) {
			update_post_meta( $post_id, 'twchr-from-api_url', wp_kses( $_POST['twchr-from-api_url'], $allowed ) );
		}
		if ( isset( $_POST['twchr-from-api_user_id'] ) ) {
			update_post_meta( $post_id, 'twchr-from-api_user_id', wp_kses( $_POST['twchr-from-api_user_id'], $allowed ) );
		}
		if ( isset( $_POST['twchr-from-api_user_login'] ) ) {
			update_post_meta( $post_id, 'twchr-from-api_user_login', wp_kses( $_POST['twchr-from-api_user_login'], $allowed ) );
		}
		if ( isset( $_POST['twchr-from-api_user_name'] ) ) {
			update_post_meta( $post_id, 'twchr-from-api_user_name', wp_kses( $_POST['twchr-from-api_user_name'], $allowed ) );
		}
		if ( isset( $_POST['twchr-from-api_view_count'] ) ) {
			update_post_meta( $post_id, 'twchr-from-api_view_count', wp_kses( $_POST['twchr-from-api_view_count'], $allowed ) );
		}
		if ( isset( $_POST['twchr-from-api_viewble'] ) ) {
			update_post_meta( $post_id, 'twchr-from-api_viewble', wp_kses( $_POST['twchr-from-api_viewble'], $allowed ) );
		}
		if ( isset( $_POST['twchr-from-api_title'] ) ) {
			update_post_meta( $post_id, 'twchr-from-api_title', wp_kses( $_POST['twchr-from-api_title'], $allowed ) );
		}
	  
}


add_action( 'save_post', 'twitcher_stream_metabox_save' );