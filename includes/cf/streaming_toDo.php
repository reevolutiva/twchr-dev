<?php
/**
 * Generated by the WordPress Meta Box Generator
 * https://jeremyhixon.com/tool/wordpress-meta-box-generator/
 * 
 * Retrieving the values:
 * start date = get_post_meta( get_the_ID(), 'twchr_stream_data_start-date', true )
 * start time = get_post_meta( get_the_ID(), 'twchr_stream_data_start-time', true )
 * is_serie = get_post_meta( get_the_ID(), 'twchr_stream_data_is_serie', true )
 * duration = get_post_meta( get_the_ID(), 'twchr_stream_data_duration', true )
 * category = get_post_meta( get_the_ID(), 'twchr_stream_data_category', true )
 */



 
function twchr_stream_todDo($post){
    
    $todo_list_array = [
        [
            "name" =>__('Schedule Stream','twitcher'),
            "status" => false,
            "index"=> 0
        ],
        [
            "name" => __('Notify your audiencie','twitcher'),
            "status" => false,
            "index" => 1
        ],
        [
            "name"=>__('Start live streaming','twitcher'),
            "status" => false,
            "index" => 2
        ],
        [
            "name"=>__('Import live streaming','twitcher'),
            "status" => false,
            "index" => 3
        ],
        [
            "name"=>__('Import streaming to Wordpress','twitcher'),
            "status" => false,
            "index" => 4
        ],
        [
            "name"=>__('Download Streaming','twitcher'),
            "status" => false,
            "index" => 5
        ],
        [
            "name"=>__('Upload streaming to YouTube','twitcher'),
            "status" => false,
            "index" => 6
        ],
        [
            "name"=>__('Change source streaming from Twitcher to Youtube','twitcher'),
            "status" => false,
            "index" => 7
        ]
    ];
	$values    = get_post_custom( $post->ID );
	$twchr_toDo_list_field = isset($values['twchr_toDo_list_field'][0]) ? $values['twchr_toDo_list_field'][0] : json_encode($todo_list_array);
	
	?>
    <style>
        .twchr_todo_list ul li.active span{
            background-image: url(<?php echo TWCHR_URL_ASSETS.'twchr_check.png';?>);
            display: block;
            background-size: 25px 25px;
            background-repeat: no-repeat;
            background-position: center;
            outline: none;
            font-size:0;

        }
    </style>
    <metabox>
        <div class="overlay">
            <div class="overlay-content">            
                <div class="twchr_todo_list">
                    <ul></ul>
                </div>
            </div>
        </div>
        <div>
            <input  type="hidden" id="twchr_toDo_field" name="twchr_toDo_list_field" value="<?php echo esc_html(trim($twchr_toDo_list_field))?>">
            
		</div>
        
        <script>
            const twchr_toDo_field = document.querySelector('#twchr_toDo_field');
            const todo_list = document.querySelector(".twchr_todo_list ul");
            const twchr_todo_overlay = document.querySelector("#twchr_stream_todDo .overlay");
            const todo_list_array = JSON.parse(twchr_toDo_field.value);
    

            // Render todo_list
            todo_list_array.forEach((value, key) => {
                const li = `<li class="${value.status === true ? 'active' : ''}"> <label> <span>${key}</span> <h4>${value.name}</h4> <input type="checkbox" name="twchr_todo_list" ${value.status === true ? 'checked' : ''}></label></li>`;
                todo_list.innerHTML = todo_list.innerHTML + li;
            });

            const items_list = todo_list.querySelectorAll("input");
            let todoListUpdateState = [...JSON.parse(twchr_toDo_field.value)];
            [...todo_list.querySelectorAll("li")].forEach( (li, index) => {
                li.addEventListener('click',(e)=>{
                    if(items_list[index].checked == true){
                        li.classList.add("active");
                        if(!todoListUpdateState.includes(index)){
                            todoListUpdateState[index].status = true;
                            
                        }
                    }else{
                        li.classList.remove("active");
                        if(todoListUpdateState[index].status === true){
                            todoListUpdateState[index].status = false;
                        }
                    }
                    
                    twchr_toDo_field.value = JSON.stringify(todoListUpdateState);
                });
            }
            );
        </script>
	<?php
}

function twchr_stream_toDo_metabox(){
	//add_meta_box($id:string,$title:string,$callback:callable,$screen:string|array|WP_Screen|null,$context:string,$priority:string,$callback_args:array|null )
	add_meta_box( 
        'twchr_stream_todDo', 
        __('Streaming Success List','twitcher'),
        'twchr_stream_todDo', 
        'twchr_streams', 
        'side'
    );
}

add_action('add_meta_boxes','twchr_stream_toDo_metabox');


function twchr_stream_toDo_metabox_save($post_id){
/* 
Antes de guardar la información, necesito verificar tres cosas:
	1. Si la entrada se está autoguardando
	2. Comprobar que el usuario actual puede realmente modificar este contenido.
*/
	
	if (! current_user_can( 'edit_posts' )) {
        return;
    }		

		$allowed = array();
		if ( isset( $_POST['twchr_toDo_list_field'] ) ) {
			update_post_meta( $post_id, 'twchr_toDo_list_field', wp_kses( $_POST['twchr_toDo_list_field'], $allowed ) );
		}
	  
}


add_action( 'save_post', 'twchr_stream_toDo_metabox_save' );
